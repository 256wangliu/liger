// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// scaleNotCenterFast
arma::sp_mat scaleNotCenterFast(arma::sp_mat x);
RcppExport SEXP _liger_scaleNotCenterFast(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleNotCenterFast(x));
    return rcpp_result_gen;
END_RCPP
}
// rowMeansFast
NumericVector rowMeansFast(arma::sp_mat x);
RcppExport SEXP _liger_rowMeansFast(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMeansFast(x));
    return rcpp_result_gen;
END_RCPP
}
// rowVarsFast
NumericVector rowVarsFast(arma::sp_mat x, NumericVector means);
RcppExport SEXP _liger_rowVarsFast(SEXP xSEXP, SEXP meansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type means(meansSEXP);
    rcpp_result_gen = Rcpp::wrap(rowVarsFast(x, means));
    return rcpp_result_gen;
END_RCPP
}
// makeFeatureMatrix
NumericMatrix makeFeatureMatrix(DataFrame& bedmat, StringVector& barcodes);
RcppExport SEXP _liger_makeFeatureMatrix(SEXP bedmatSEXP, SEXP barcodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type bedmat(bedmatSEXP);
    Rcpp::traits::input_parameter< StringVector& >::type barcodes(barcodesSEXP);
    rcpp_result_gen = Rcpp::wrap(makeFeatureMatrix(bedmat, barcodes));
    return rcpp_result_gen;
END_RCPP
}
// cluster_vote
IntegerVector cluster_vote(const Eigen::MatrixXd& nn_ranked, IntegerVector clusts);
RcppExport SEXP _liger_cluster_vote(SEXP nn_rankedSEXP, SEXP clustsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type nn_ranked(nn_rankedSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusts(clustsSEXP);
    rcpp_result_gen = Rcpp::wrap(cluster_vote(nn_ranked, clusts));
    return rcpp_result_gen;
END_RCPP
}
// scale_columns_fast
Eigen::MatrixXd scale_columns_fast(Eigen::MatrixXd mat, bool scale, bool center);
RcppExport SEXP _liger_scale_columns_fast(SEXP matSEXP, SEXP scaleSEXP, SEXP centerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type mat(matSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type center(centerSEXP);
    rcpp_result_gen = Rcpp::wrap(scale_columns_fast(mat, scale, center));
    return rcpp_result_gen;
END_RCPP
}
// max_factor
IntegerVector max_factor(Eigen::MatrixXd H, IntegerVector dims_use, bool center_cols);
RcppExport SEXP _liger_max_factor(SEXP HSEXP, SEXP dims_useSEXP, SEXP center_colsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type H(HSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dims_use(dims_useSEXP);
    Rcpp::traits::input_parameter< bool >::type center_cols(center_colsSEXP);
    rcpp_result_gen = Rcpp::wrap(max_factor(H, dims_use, center_cols));
    return rcpp_result_gen;
END_RCPP
}
// solveNNLS
arma::mat solveNNLS(const arma::mat& C, const arma::mat& B);
RcppExport SEXP _liger_solveNNLS(SEXP CSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(solveNNLS(C, B));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_liger_scaleNotCenterFast", (DL_FUNC) &_liger_scaleNotCenterFast, 1},
    {"_liger_rowMeansFast", (DL_FUNC) &_liger_rowMeansFast, 1},
    {"_liger_rowVarsFast", (DL_FUNC) &_liger_rowVarsFast, 2},
    {"_liger_makeFeatureMatrix", (DL_FUNC) &_liger_makeFeatureMatrix, 2},
    {"_liger_cluster_vote", (DL_FUNC) &_liger_cluster_vote, 2},
    {"_liger_scale_columns_fast", (DL_FUNC) &_liger_scale_columns_fast, 3},
    {"_liger_max_factor", (DL_FUNC) &_liger_max_factor, 3},
    {"_liger_solveNNLS", (DL_FUNC) &_liger_solveNNLS, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_liger(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
